{"ast":null,"code":"import api from'./api';export const productService={getAllProducts:async()=>{const response=await api.get('/products');return response.data;},getProductById:async id=>{const response=await api.get(\"/products/\".concat(id));return response.data;},createProduct:async productData=>{const response=await api.post('/products',productData);return response.data;},updateProduct:async(id,productData)=>{const response=await api.put(\"/products/\".concat(id),productData);return response.data;},deleteProduct:async id=>{const response=await api.delete(\"/products/\".concat(id));return response.data;},getLowStockProducts:async()=>{const response=await api.get('/products/low-stock');return response.data;},searchProducts:async searchTerm=>{const response=await api.get(\"/products/search?q=\".concat(encodeURIComponent(searchTerm)));return response.data;}};","map":{"version":3,"names":["api","productService","getAllProducts","response","get","data","getProductById","id","concat","createProduct","productData","post","updateProduct","put","deleteProduct","delete","getLowStockProducts","searchProducts","searchTerm","encodeURIComponent"],"sources":["C:/Users/User/Downloads/Invent-frontend/frontend/src/services/productService.js"],"sourcesContent":["import api from './api';\n\nexport const productService = {\n  getAllProducts: async () => {\n    const response = await api.get('/products');\n    return response.data;\n  },\n\n  getProductById: async (id) => {\n    const response = await api.get(`/products/${id}`);\n    return response.data;\n  },\n\n  createProduct: async (productData) => {\n    const response = await api.post('/products', productData);\n    return response.data;\n  },\n\n  updateProduct: async (id, productData) => {\n    const response = await api.put(`/products/${id}`, productData);\n    return response.data;\n  },\n\n  deleteProduct: async (id) => {\n    const response = await api.delete(`/products/${id}`);\n    return response.data;\n  },\n\n  getLowStockProducts: async () => {\n    const response = await api.get('/products/low-stock');\n    return response.data;\n  },\n\n  searchProducts: async (searchTerm) => {\n    const response = await api.get(`/products/search?q=${encodeURIComponent(searchTerm)}`);\n    return response.data;\n  }\n};\n"],"mappings":"AAAA,MAAO,CAAAA,GAAG,KAAM,OAAO,CAEvB,MAAO,MAAM,CAAAC,cAAc,CAAG,CAC5BC,cAAc,CAAE,KAAAA,CAAA,GAAY,CAC1B,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACI,GAAG,CAAC,WAAW,CAAC,CAC3C,MAAO,CAAAD,QAAQ,CAACE,IAAI,CACtB,CAAC,CAEDC,cAAc,CAAE,KAAO,CAAAC,EAAE,EAAK,CAC5B,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACI,GAAG,cAAAI,MAAA,CAAcD,EAAE,CAAE,CAAC,CACjD,MAAO,CAAAJ,QAAQ,CAACE,IAAI,CACtB,CAAC,CAEDI,aAAa,CAAE,KAAO,CAAAC,WAAW,EAAK,CACpC,KAAM,CAAAP,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACW,IAAI,CAAC,WAAW,CAAED,WAAW,CAAC,CACzD,MAAO,CAAAP,QAAQ,CAACE,IAAI,CACtB,CAAC,CAEDO,aAAa,CAAE,KAAAA,CAAOL,EAAE,CAAEG,WAAW,GAAK,CACxC,KAAM,CAAAP,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACa,GAAG,cAAAL,MAAA,CAAcD,EAAE,EAAIG,WAAW,CAAC,CAC9D,MAAO,CAAAP,QAAQ,CAACE,IAAI,CACtB,CAAC,CAEDS,aAAa,CAAE,KAAO,CAAAP,EAAE,EAAK,CAC3B,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACe,MAAM,cAAAP,MAAA,CAAcD,EAAE,CAAE,CAAC,CACpD,MAAO,CAAAJ,QAAQ,CAACE,IAAI,CACtB,CAAC,CAEDW,mBAAmB,CAAE,KAAAA,CAAA,GAAY,CAC/B,KAAM,CAAAb,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACI,GAAG,CAAC,qBAAqB,CAAC,CACrD,MAAO,CAAAD,QAAQ,CAACE,IAAI,CACtB,CAAC,CAEDY,cAAc,CAAE,KAAO,CAAAC,UAAU,EAAK,CACpC,KAAM,CAAAf,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACI,GAAG,uBAAAI,MAAA,CAAuBW,kBAAkB,CAACD,UAAU,CAAC,CAAE,CAAC,CACtF,MAAO,CAAAf,QAAQ,CAACE,IAAI,CACtB,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}