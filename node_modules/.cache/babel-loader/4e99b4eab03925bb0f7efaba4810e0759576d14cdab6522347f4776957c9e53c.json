{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{authService}from'../services/authService';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{checkAuthStatus();},[]);const checkAuthStatus=async()=>{try{const userData=await authService.getCurrentUser();setUser(userData);}catch(error){console.log('No authenticated user');}finally{setLoading(false);}};const login=async(email,password)=>{try{const userData=await authService.login(email,password);setUser(userData);return{success:true};}catch(error){var _error$response,_error$response$data;return{success:false,message:((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Login failed'};}};const logout=async()=>{try{await authService.logout();setUser(null);}catch(error){console.error('Logout error:',error);setUser(null);// Force logout even if API call fails\n}};const value={user,login,logout,loading};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authService","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","checkAuthStatus","userData","getCurrentUser","error","console","log","login","email","password","success","_error$response","_error$response$data","message","response","data","logout","value","Provider"],"sources":["C:/Users/User/Downloads/Invent-frontend/frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authService } from '../services/authService';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n\n  const checkAuthStatus = async () => {\n    try {\n      const userData = await authService.getCurrentUser();\n      setUser(userData);\n    } catch (error) {\n      console.log('No authenticated user');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (email, password) => {\n    try {\n      const userData = await authService.login(email, password);\n      setUser(userData);\n      return { success: true };\n    } catch (error) {\n      return { \n        success: false, \n        message: error.response?.data?.message || 'Login failed' \n      };\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await authService.logout();\n      setUser(null);\n    } catch (error) {\n      console.error('Logout error:', error);\n      setUser(null); // Force logout even if API call fails\n    }\n  };\n\n  const value = {\n    user,\n    login,\n    logout,\n    loading\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC7E,OAASC,WAAW,KAAQ,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEtD,KAAM,CAAAC,WAAW,cAAGP,aAAa,CAAC,CAAC,CAEnC,MAAO,MAAM,CAAAQ,OAAO,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,OAAO,CAAGR,UAAU,CAACM,WAAW,CAAC,CACvC,GAAI,CAACE,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,6CAA6C,CAAC,CAChE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAED,MAAO,MAAM,CAAAE,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACc,OAAO,CAAEC,UAAU,CAAC,CAAGf,QAAQ,CAAC,IAAI,CAAC,CAE5CC,SAAS,CAAC,IAAM,CACde,eAAe,CAAC,CAAC,CACnB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAA,eAAe,CAAG,KAAAA,CAAA,GAAY,CAClC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAf,WAAW,CAACgB,cAAc,CAAC,CAAC,CACnDL,OAAO,CAACI,QAAQ,CAAC,CACnB,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC,CACtC,CAAC,OAAS,CACRN,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED,KAAM,CAAAO,KAAK,CAAG,KAAAA,CAAOC,KAAK,CAAEC,QAAQ,GAAK,CACvC,GAAI,CACF,KAAM,CAAAP,QAAQ,CAAG,KAAM,CAAAf,WAAW,CAACoB,KAAK,CAACC,KAAK,CAAEC,QAAQ,CAAC,CACzDX,OAAO,CAACI,QAAQ,CAAC,CACjB,MAAO,CAAEQ,OAAO,CAAE,IAAK,CAAC,CAC1B,CAAE,MAAON,KAAK,CAAE,KAAAO,eAAA,CAAAC,oBAAA,CACd,MAAO,CACLF,OAAO,CAAE,KAAK,CACdG,OAAO,CAAE,EAAAF,eAAA,CAAAP,KAAK,CAACU,QAAQ,UAAAH,eAAA,kBAAAC,oBAAA,CAAdD,eAAA,CAAgBI,IAAI,UAAAH,oBAAA,iBAApBA,oBAAA,CAAsBC,OAAO,GAAI,cAC5C,CAAC,CACH,CACF,CAAC,CAED,KAAM,CAAAG,MAAM,CAAG,KAAAA,CAAA,GAAY,CACzB,GAAI,CACF,KAAM,CAAA7B,WAAW,CAAC6B,MAAM,CAAC,CAAC,CAC1BlB,OAAO,CAAC,IAAI,CAAC,CACf,CAAE,MAAOM,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,eAAe,CAAEA,KAAK,CAAC,CACrCN,OAAO,CAAC,IAAI,CAAC,CAAE;AACjB,CACF,CAAC,CAED,KAAM,CAAAmB,KAAK,CAAG,CACZpB,IAAI,CACJU,KAAK,CACLS,MAAM,CACNjB,OACF,CAAC,CAED,mBACEV,IAAA,CAACC,WAAW,CAAC4B,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAArB,QAAA,CAChCA,QAAQ,CACW,CAAC,CAE3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}