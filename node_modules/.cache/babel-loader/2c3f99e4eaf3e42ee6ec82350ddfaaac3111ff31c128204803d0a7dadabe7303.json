{"ast":null,"code":"import api from'./api';export const supplierService={getAllSuppliers:async()=>{const response=await api.get('/suppliers');return response.data;},getSupplierById:async id=>{const response=await api.get(\"/suppliers/\".concat(id));return response.data;},createSupplier:async supplierData=>{const response=await api.post('/suppliers',supplierData);return response.data;},updateSupplier:async(id,supplierData)=>{const response=await api.put(\"/suppliers/\".concat(id),supplierData);return response.data;},deleteSupplier:async id=>{const response=await api.delete(\"/suppliers/\".concat(id));return response.data;},searchSuppliers:async searchTerm=>{const response=await api.get(\"/suppliers/search?q=\".concat(encodeURIComponent(searchTerm)));return response.data;}};","map":{"version":3,"names":["api","supplierService","getAllSuppliers","response","get","data","getSupplierById","id","concat","createSupplier","supplierData","post","updateSupplier","put","deleteSupplier","delete","searchSuppliers","searchTerm","encodeURIComponent"],"sources":["C:/Users/User/Downloads/Invent-frontend/frontend/src/services/supplierService.js"],"sourcesContent":["import api from './api';\n\nexport const supplierService = {\n  getAllSuppliers: async () => {\n    const response = await api.get('/suppliers');\n    return response.data;\n  },\n\n  getSupplierById: async (id) => {\n    const response = await api.get(`/suppliers/${id}`);\n    return response.data;\n  },\n\n  createSupplier: async (supplierData) => {\n    const response = await api.post('/suppliers', supplierData);\n    return response.data;\n  },\n\n  updateSupplier: async (id, supplierData) => {\n    const response = await api.put(`/suppliers/${id}`, supplierData);\n    return response.data;\n  },\n\n  deleteSupplier: async (id) => {\n    const response = await api.delete(`/suppliers/${id}`);\n    return response.data;\n  },\n\n  searchSuppliers: async (searchTerm) => {\n    const response = await api.get(`/suppliers/search?q=${encodeURIComponent(searchTerm)}`);\n    return response.data;\n  }\n};\n"],"mappings":"AAAA,MAAO,CAAAA,GAAG,KAAM,OAAO,CAEvB,MAAO,MAAM,CAAAC,eAAe,CAAG,CAC7BC,eAAe,CAAE,KAAAA,CAAA,GAAY,CAC3B,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACI,GAAG,CAAC,YAAY,CAAC,CAC5C,MAAO,CAAAD,QAAQ,CAACE,IAAI,CACtB,CAAC,CAEDC,eAAe,CAAE,KAAO,CAAAC,EAAE,EAAK,CAC7B,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACI,GAAG,eAAAI,MAAA,CAAeD,EAAE,CAAE,CAAC,CAClD,MAAO,CAAAJ,QAAQ,CAACE,IAAI,CACtB,CAAC,CAEDI,cAAc,CAAE,KAAO,CAAAC,YAAY,EAAK,CACtC,KAAM,CAAAP,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACW,IAAI,CAAC,YAAY,CAAED,YAAY,CAAC,CAC3D,MAAO,CAAAP,QAAQ,CAACE,IAAI,CACtB,CAAC,CAEDO,cAAc,CAAE,KAAAA,CAAOL,EAAE,CAAEG,YAAY,GAAK,CAC1C,KAAM,CAAAP,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACa,GAAG,eAAAL,MAAA,CAAeD,EAAE,EAAIG,YAAY,CAAC,CAChE,MAAO,CAAAP,QAAQ,CAACE,IAAI,CACtB,CAAC,CAEDS,cAAc,CAAE,KAAO,CAAAP,EAAE,EAAK,CAC5B,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACe,MAAM,eAAAP,MAAA,CAAeD,EAAE,CAAE,CAAC,CACrD,MAAO,CAAAJ,QAAQ,CAACE,IAAI,CACtB,CAAC,CAEDW,eAAe,CAAE,KAAO,CAAAC,UAAU,EAAK,CACrC,KAAM,CAAAd,QAAQ,CAAG,KAAM,CAAAH,GAAG,CAACI,GAAG,wBAAAI,MAAA,CAAwBU,kBAAkB,CAACD,UAAU,CAAC,CAAE,CAAC,CACvF,MAAO,CAAAd,QAAQ,CAACE,IAAI,CACtB,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}